The ``2-matrix_divided`` module
===============================

Using ``matrix_divided``
------------------------

We first import ``matrix_divided`` from the ``2-matrix_divided`` module


    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Valid matrix and divider
========================

case 1: arguments of matrix are list of lists of integers and an integer divider
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix
    [[1, 2, 3], [4, 5, 6]]

case 2: arguments of matrix are list of lists of floats and an integer divider
    >>> matrix = [[1.5, 2.5, 3.9], [4.0, 5.2, 6.3]]
    >>> matrix_divided(matrix, 2)
    [[0.75, 1.25, 1.95], [2.0, 2.6, 3.15]]


case 3: arguments of matrix are list of lists of integers/floats and a float divider
    >>> matrix = [[1.0, 2.5, 3], [4.0, 5, 6.3]]
    >>> matrix_divided(matrix, 2.5)
    [[0.4, 1.0, 1.2], [1.6, 2.0, 2.52]]



Invalid divider
===============

The divisor ``div`` must be either int or float number,
otherwise TypeError is raised

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, "alx")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number


    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, None)
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Moreover the divider ``div`` must be different from 0,
Otherwise, a ZeroDivisionError is raised.

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero


Invalid matrix
==============

The matrix ``matrix`` must be a list of lists of integers or floats, 
otherwise raise a TypeError is raised.


    >>> matrix = "alx School"
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats


    >>> matrix = [[1, 2, 3], (4, 5, 6)]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
   

    >>> matrix = [1, 2, 3]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
 

    >>> matrix = [[1, 2, 3], [4, "School", 6]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats



    >>> matrix = []
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats


    >>> matrix = None
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats


    >>> matrix = [[]]
    >>> matrix_divided(matrix, 3)
    [[]]



Moreover, each row of the matrix must be of the same size, 
otherwise a TypeError is raised.

    >>> matrix = [[1, 2, 3], [4, 5, 6, 7]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size
